version: '3'

services:
  postgres:
    image: postgres:14.5-alpine
    environment:
      POSTGRES_DB: "ecomm_db"
      POSTGRES_USER: "aboka"
      POSTGRES_PASSWORD: "Aboka_877767"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aboka -d ecomm_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  backend:
    build:
      context: ./server
    command: gunicorn core.wsgi --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
  frontend:
    build:
      context: ./client
    volumes:
      - react_build:/client/build
    depends_on:
      - backend
  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/client
    depends_on:
      - backend
      - frontend

volumes:
  react_build:
  postgres_data: